<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">




<mapper namespace="com.mytest.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.mytest.domain.User">
        <id column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="credits" jdbcType="INTEGER" property="credits" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="last_visit" jdbcType="TIMESTAMP" property="lastVisit" />
        <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
    </resultMap>
    <sql id="Base_Column_List">
        user_id, user_name, credits, password, last_visit, last_ip
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.mytest.domain.User">
        insert into t_user (user_id, user_name, credits,
        password, last_visit, last_ip
        )
        values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{credits,jdbcType=INTEGER},
        #{password,jdbcType=VARCHAR}, #{lastVisit,jdbcType=TIMESTAMP}, #{lastIp,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.mytest.domain.User">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="credits != null">
                credits,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="lastVisit != null">
                last_visit,
            </if>
            <if test="lastIp != null">
                last_ip,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="credits != null">
                #{credits,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="lastVisit != null">
                #{lastVisit,jdbcType=TIMESTAMP},
            </if>
            <if test="lastIp != null">
                #{lastIp,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.mytest.domain.User">
        update t_user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="credits != null">
                credits = #{credits,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="lastVisit != null">
                last_visit = #{lastVisit,jdbcType=TIMESTAMP},
            </if>
            <if test="lastIp != null">
                last_ip = #{lastIp,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mytest.domain.User">
        update t_user
        set user_name = #{userName,jdbcType=VARCHAR},
        credits = #{credits,jdbcType=INTEGER},
        password = #{password,jdbcType=VARCHAR},
        last_visit = #{lastVisit,jdbcType=TIMESTAMP},
        last_ip = #{lastIp,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
</mapper>